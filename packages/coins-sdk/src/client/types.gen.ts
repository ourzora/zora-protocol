// This file is auto-generated by @hey-api/openapi-ts

export type GetApiKeyData = {
  body?: never;
  path?: never;
  query: {
    apiKey: string;
  };
  url: "/apiKey";
};

export type GetApiKeyErrors = {
  /**
   * Bad request
   */
  400: unknown;
  /**
   * Internal server error
   */
  500: unknown;
};

export type GetApiKeyResponses = {
  /**
   * Successful operation
   */
  200: {
    apiKey: {
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      apiKey: string;
      /**
       * The `Boolean` scalar type represents `true` or `false`.
       */
      isActive: boolean;
    };
  };
};

export type GetApiKeyResponse = GetApiKeyResponses[keyof GetApiKeyResponses];

export type GetCoinData = {
  body?: never;
  path?: never;
  query: {
    address: string;
    chain?: number;
  };
  url: "/coin";
};

export type GetCoinErrors = {
  /**
   * Bad request
   */
  400: unknown;
  /**
   * Internal server error
   */
  500: unknown;
};

export type GetCoinResponses = {
  /**
   * Successful operation
   */
  200: {
    zora20Token?: {
      /**
       * The Globally Unique ID of this object
       */
      id: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      name: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      description: string;
      address: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      symbol: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      totalSupply: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      totalVolume: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      volume24h: string;
      /**
       * Date with time (isoformat)
       */
      createdAt?: string;
      creatorAddress?: string;
      poolCurrencyToken?: {
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        address?: string;
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        name?: string;
        /**
         * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
         */
        decimals?: number;
      };
      tokenPrice?: {
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        priceInUsdc?: string;
        currencyAddress: string;
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        priceInPoolToken: string;
      };
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      marketCap: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      marketCapDelta24h: string;
      /**
       * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
       */
      chainId: number;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      tokenUri?: string;
      platformReferrerAddress?: string;
      payoutRecipientAddress?: string;
      creatorProfile?: {
        /**
         * The Globally Unique ID of this object
         */
        id: string;
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        handle: string;
        avatar?: {
          previewImage: {
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            blurhash?: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            medium: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            small: string;
          };
        };
      };
      mediaContent?: {
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        mimeType?: string;
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        originalUri: string;
        previewImage?: {
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          small: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          medium: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          blurhash?: string;
        };
      };
      /**
       * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
       */
      uniqueHolders: number;
      uniswapV4PoolKey: {
        token0Address: string;
        token1Address: string;
        /**
         * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
         */
        fee: number;
        /**
         * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
         */
        tickSpacing: number;
        hookAddress: string;
      };
      uniswapV3PoolAddress: string;
      zoraComments: {
        pageInfo: {
          /**
           * When paginating forwards, the cursor to continue.
           */
          endCursor?: string;
          /**
           * When paginating forwards, are there more items?
           */
          hasNextPage: boolean;
        };
        /**
         * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
         */
        count: number;
        edges: Array<{
          node: {
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            commentId: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            nonce: string;
            userAddress: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            txHash: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            comment: string;
            /**
             * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
             */
            timestamp: number;
            userProfile?: {
              /**
               * The Globally Unique ID of this object
               */
              id: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              handle: string;
              avatar?: {
                previewImage: {
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  blurhash?: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  small: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  medium: string;
                };
              };
            };
          };
        }>;
      };
      creatorEarnings?: Array<{
        amount: {
          currencyAddress: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          amountRaw: string;
          /**
           * The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).
           */
          amountDecimal: number;
        };
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        amountUsd?: string;
      }>;
    };
  };
};

export type GetCoinResponse = GetCoinResponses[keyof GetCoinResponses];

export type GetCoinCommentsData = {
  body?: never;
  path?: never;
  query: {
    address: string;
    chain?: number;
    after?: string;
    count?: number;
  };
  url: "/coinComments";
};

export type GetCoinCommentsErrors = {
  /**
   * Bad request
   */
  400: unknown;
  /**
   * Internal server error
   */
  500: unknown;
};

export type GetCoinCommentsResponses = {
  /**
   * Successful operation
   */
  200: {
    zora20Token?: {
      zoraComments: {
        pageInfo: {
          /**
           * When paginating forwards, the cursor to continue.
           */
          endCursor?: string;
          /**
           * When paginating forwards, are there more items?
           */
          hasNextPage: boolean;
        };
        /**
         * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
         */
        count: number;
        edges: Array<{
          node: {
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            commentId: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            nonce: string;
            userAddress: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            txHash: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            comment: string;
            /**
             * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
             */
            timestamp: number;
            userProfile?: {
              /**
               * The Globally Unique ID of this object
               */
              id: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              handle: string;
              avatar?: {
                previewImage: {
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  blurhash?: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  small: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  medium: string;
                };
              };
            };
            replies: {
              /**
               * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
               */
              count: number;
              edges: Array<{
                node: {
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  commentId: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  nonce: string;
                  userAddress: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  txHash: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  comment: string;
                  /**
                   * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
                   */
                  timestamp: number;
                  userProfile?: {
                    /**
                     * The Globally Unique ID of this object
                     */
                    id: string;
                    /**
                     * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                     */
                    handle: string;
                    avatar?: {
                      previewImage: {
                        /**
                         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                         */
                        blurhash?: string;
                        /**
                         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                         */
                        small: string;
                        /**
                         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                         */
                        medium: string;
                      };
                    };
                  };
                };
              }>;
            };
          };
        }>;
      };
    };
  };
};

export type GetCoinCommentsResponse =
  GetCoinCommentsResponses[keyof GetCoinCommentsResponses];

export type GetCoinHoldersData = {
  body?: never;
  path?: never;
  query: {
    chainId: number;
    address: string;
    after?: string;
    count?: number;
  };
  url: "/coinHolders";
};

export type GetCoinHoldersErrors = {
  /**
   * Bad request
   */
  400: unknown;
  /**
   * Internal server error
   */
  500: unknown;
};

export type GetCoinHoldersResponses = {
  /**
   * Successful operation
   */
  200: {
    zora20Token?: {
      tokenBalances: {
        pageInfo: {
          /**
           * When paginating forwards, the cursor to continue.
           */
          endCursor?: string;
          /**
           * When paginating forwards, are there more items?
           */
          hasNextPage: boolean;
        };
        /**
         * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
         */
        count: number;
        edges: Array<{
          node: {
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            balance: string;
            ownerAddress: string;
            ownerProfile: {
              /**
               * The Globally Unique ID of this object
               */
              id: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              handle: string;
              avatar?: {
                previewImage: {
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  blurhash?: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  medium: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  small: string;
                };
              };
            };
          };
        }>;
      };
    };
  };
};

export type GetCoinHoldersResponse =
  GetCoinHoldersResponses[keyof GetCoinHoldersResponses];

export type GetCoinSwapsData = {
  body?: never;
  path?: never;
  query: {
    address: string;
    chain?: number;
    after?: string;
    first?: number;
  };
  url: "/coinSwaps";
};

export type GetCoinSwapsErrors = {
  /**
   * Bad request
   */
  400: unknown;
  /**
   * Internal server error
   */
  500: unknown;
};

export type GetCoinSwapsResponses = {
  /**
   * Successful operation
   */
  200: {
    zora20Token?: {
      swapActivities: {
        /**
         * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
         */
        count: number;
        edges: Array<{
          node: {
            /**
             * The Globally Unique ID of this object
             */
            id: string;
            currencyAmountWithPrice: {
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              priceUsdc?: string;
              currencyAmount: {
                currencyAddress: string;
                /**
                 * The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).
                 */
                amountDecimal: number;
              };
            };
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            senderAddress: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            recipientAddress: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            transactionHash: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            coinAmount: string;
            /**
             * Date with time (isoformat)
             */
            blockTimestamp: string;
            activityType?: "BUY" | "SELL";
            senderProfile?: {
              /**
               * The Globally Unique ID of this object
               */
              id: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              handle: string;
              avatar?: {
                previewImage: {
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  blurhash?: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  medium: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  small: string;
                };
              };
            };
          };
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          cursor: string;
        }>;
        pageInfo: {
          /**
           * When paginating forwards, the cursor to continue.
           */
          endCursor?: string;
          /**
           * When paginating forwards, are there more items?
           */
          hasNextPage: boolean;
        };
      };
    };
  };
};

export type GetCoinSwapsResponse =
  GetCoinSwapsResponses[keyof GetCoinSwapsResponses];

export type GetCoinsData = {
  body?: never;
  path?: never;
  query: {
    coins: Array<{
      /**
       * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
       */
      chainId: number;
      collectionAddress: string;
    }>;
  };
  url: "/coins";
};

export type GetCoinsErrors = {
  /**
   * Bad request
   */
  400: unknown;
  /**
   * Internal server error
   */
  500: unknown;
};

export type GetCoinsResponses = {
  /**
   * Successful operation
   */
  200: {
    zora20Tokens: Array<{
      /**
       * The Globally Unique ID of this object
       */
      id: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      name: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      description: string;
      address: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      symbol: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      totalSupply: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      totalVolume: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      volume24h: string;
      /**
       * Date with time (isoformat)
       */
      createdAt?: string;
      creatorAddress?: string;
      poolCurrencyToken?: {
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        address?: string;
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        name?: string;
        /**
         * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
         */
        decimals?: number;
      };
      tokenPrice?: {
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        priceInUsdc?: string;
        currencyAddress: string;
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        priceInPoolToken: string;
      };
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      marketCap: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      marketCapDelta24h: string;
      /**
       * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
       */
      chainId: number;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      tokenUri?: string;
      platformReferrerAddress?: string;
      payoutRecipientAddress?: string;
      creatorProfile?: {
        /**
         * The Globally Unique ID of this object
         */
        id: string;
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        handle: string;
        avatar?: {
          previewImage: {
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            blurhash?: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            medium: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            small: string;
          };
        };
      };
      mediaContent?: {
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        mimeType?: string;
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        originalUri: string;
        previewImage?: {
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          small: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          medium: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          blurhash?: string;
        };
      };
      /**
       * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
       */
      uniqueHolders: number;
      uniswapV4PoolKey: {
        token0Address: string;
        token1Address: string;
        /**
         * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
         */
        fee: number;
        /**
         * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
         */
        tickSpacing: number;
        hookAddress: string;
      };
      uniswapV3PoolAddress: string;
      zoraComments: {
        pageInfo: {
          /**
           * When paginating forwards, the cursor to continue.
           */
          endCursor?: string;
          /**
           * When paginating forwards, are there more items?
           */
          hasNextPage: boolean;
        };
        /**
         * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
         */
        count: number;
        edges: Array<{
          node: {
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            commentId: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            nonce: string;
            userAddress: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            txHash: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            comment: string;
            /**
             * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
             */
            timestamp: number;
            userProfile?: {
              /**
               * The Globally Unique ID of this object
               */
              id: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              handle: string;
              avatar?: {
                previewImage: {
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  blurhash?: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  small: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  medium: string;
                };
              };
            };
          };
        }>;
      };
      creatorEarnings?: Array<{
        amount: {
          currencyAddress: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          amountRaw: string;
          /**
           * The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).
           */
          amountDecimal: number;
        };
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        amountUsd?: string;
      }>;
    }>;
  };
};

export type GetCoinsResponse = GetCoinsResponses[keyof GetCoinsResponses];

export type SetCreateUploadJwtData = {
  body?: {
    creatorAddress: string;
  };
  path?: never;
  query?: never;
  url: "/createUploadJWT";
};

export type SetCreateUploadJwtErrors = {
  /**
   * Bad request
   */
  400: unknown;
  /**
   * Internal server error
   */
  500: unknown;
};

export type SetCreateUploadJwtResponses = {
  /**
   * Successful operation
   */
  200: {
    /**
     * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
     */
    createUploadJwtFromApiKey: string;
  };
};

export type SetCreateUploadJwtResponse =
  SetCreateUploadJwtResponses[keyof SetCreateUploadJwtResponses];

export type GetExploreData = {
  body?: never;
  path?: never;
  query: {
    listType:
      | "TOP_GAINERS"
      | "TOP_VOLUME_24H"
      | "MOST_VALUABLE"
      | "NEW"
      | "OLD"
      | "LAST_TRADED"
      | "LAST_TRADED_UNIQUE"
      | "FEATURED"
      | "FEATURED_VIDEOS"
      | "NEW_CREATORS"
      | "MOST_VALUABLE_CREATORS";
    count?: number;
    after?: string;
  };
  url: "/explore";
};

export type GetExploreErrors = {
  /**
   * Bad request
   */
  400: unknown;
  /**
   * Internal server error
   */
  500: unknown;
};

export type GetExploreResponses = {
  /**
   * Successful operation
   */
  200: {
    exploreList: {
      edges: Array<{
        node: {
          /**
           * The Globally Unique ID of this object
           */
          id: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          name: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          description: string;
          address: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          symbol: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          totalSupply: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          totalVolume: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          volume24h: string;
          /**
           * Date with time (isoformat)
           */
          createdAt?: string;
          creatorAddress?: string;
          poolCurrencyToken?: {
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            address?: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            name?: string;
            /**
             * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
             */
            decimals?: number;
          };
          tokenPrice?: {
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            priceInUsdc?: string;
            currencyAddress: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            priceInPoolToken: string;
          };
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          marketCap: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          marketCapDelta24h: string;
          /**
           * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
           */
          chainId: number;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          tokenUri?: string;
          platformReferrerAddress?: string;
          payoutRecipientAddress?: string;
          creatorProfile?: {
            /**
             * The Globally Unique ID of this object
             */
            id: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            handle: string;
            avatar?: {
              previewImage: {
                /**
                 * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                 */
                blurhash?: string;
                /**
                 * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                 */
                medium: string;
                /**
                 * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                 */
                small: string;
              };
            };
          };
          mediaContent?: {
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            mimeType?: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            originalUri: string;
            previewImage?: {
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              small: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              medium: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              blurhash?: string;
            };
          };
          /**
           * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
           */
          uniqueHolders: number;
          uniswapV4PoolKey: {
            token0Address: string;
            token1Address: string;
            /**
             * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
             */
            fee: number;
            /**
             * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
             */
            tickSpacing: number;
            hookAddress: string;
          };
          uniswapV3PoolAddress: string;
        };
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        cursor: string;
      }>;
      pageInfo: {
        /**
         * When paginating forwards, the cursor to continue.
         */
        endCursor?: string;
        /**
         * When paginating forwards, are there more items?
         */
        hasNextPage: boolean;
      };
    };
  };
};

export type GetExploreResponse = GetExploreResponses[keyof GetExploreResponses];

export type GetProfileData = {
  body?: never;
  path?: never;
  query: {
    identifier: string;
  };
  url: "/profile";
};

export type GetProfileErrors = {
  /**
   * Bad request
   */
  400: unknown;
  /**
   * Internal server error
   */
  500: unknown;
};

export type GetProfileResponses = {
  /**
   * Successful operation
   */
  200: {
    profile?: {
      /**
       * The Globally Unique ID of this object
       */
      id: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      handle: string;
      avatar?: {
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        small: string;
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        medium: string;
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        blurhash?: string;
      };
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      username: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      displayName?: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      bio: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      website?: string;
      publicWallet: {
        walletAddress: string;
      };
      socialAccounts: {
        instagram?: {
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          username?: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          displayName?: string;
        };
        tiktok?: {
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          username?: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          displayName?: string;
        };
        twitter?: {
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          username?: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          displayName?: string;
        };
        farcaster?: {
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          username?: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          displayName?: string;
        };
      };
      linkedWallets: {
        edges: Array<{
          node: {
            walletType: "PRIVY" | "EXTERNAL" | "SMART_WALLET";
            walletAddress: string;
          };
        }>;
      };
      creatorCoin?: {
        address: string;
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        marketCap: string;
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        marketCapDelta24h: string;
      };
    };
  };
};

export type GetProfileResponse = GetProfileResponses[keyof GetProfileResponses];

export type GetProfileBalancesData = {
  body?: never;
  path?: never;
  query: {
    identifier: string;
    count?: number;
    after?: string;
    sortOption?: "BALANCE" | "MARKET_CAP" | "USD_VALUE" | "PRICE_CHANGE";
    excludeHidden?: boolean;
    chainIds?: Array<number>;
  };
  url: "/profileBalances";
};

export type GetProfileBalancesErrors = {
  /**
   * Bad request
   */
  400: unknown;
  /**
   * Internal server error
   */
  500: unknown;
};

export type GetProfileBalancesResponses = {
  /**
   * Successful operation
   */
  200: {
    profile?: {
      /**
       * The Globally Unique ID of this object
       */
      id: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      handle: string;
      avatar?: {
        previewImage: {
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          blurhash?: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          medium: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          small: string;
        };
      };
      coinBalances: {
        /**
         * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
         */
        count: number;
        edges: Array<{
          node: {
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            balance: string;
            /**
             * The Globally Unique ID of this object
             */
            id: string;
            coin?: {
              /**
               * The Globally Unique ID of this object
               */
              id: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              name: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              description: string;
              address: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              symbol: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              totalSupply: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              totalVolume: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              volume24h: string;
              /**
               * Date with time (isoformat)
               */
              createdAt?: string;
              creatorAddress?: string;
              poolCurrencyToken?: {
                /**
                 * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                 */
                address?: string;
                /**
                 * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                 */
                name?: string;
                /**
                 * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
                 */
                decimals?: number;
              };
              tokenPrice?: {
                /**
                 * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                 */
                priceInUsdc?: string;
                currencyAddress: string;
                /**
                 * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                 */
                priceInPoolToken: string;
              };
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              marketCap: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              marketCapDelta24h: string;
              /**
               * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
               */
              chainId: number;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              tokenUri?: string;
              platformReferrerAddress?: string;
              payoutRecipientAddress?: string;
              creatorProfile?: {
                /**
                 * The Globally Unique ID of this object
                 */
                id: string;
                /**
                 * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                 */
                handle: string;
                avatar?: {
                  previewImage: {
                    /**
                     * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                     */
                    blurhash?: string;
                    /**
                     * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                     */
                    medium: string;
                    /**
                     * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                     */
                    small: string;
                  };
                };
              };
              mediaContent?: {
                /**
                 * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                 */
                mimeType?: string;
                /**
                 * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                 */
                originalUri: string;
                previewImage?: {
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  small: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  medium: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  blurhash?: string;
                };
              };
              /**
               * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
               */
              uniqueHolders: number;
              uniswapV4PoolKey: {
                token0Address: string;
                token1Address: string;
                /**
                 * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
                 */
                fee: number;
                /**
                 * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
                 */
                tickSpacing: number;
                hookAddress: string;
              };
              uniswapV3PoolAddress: string;
            };
          };
        }>;
        pageInfo: {
          /**
           * When paginating forwards, are there more items?
           */
          hasNextPage: boolean;
          /**
           * When paginating forwards, the cursor to continue.
           */
          endCursor?: string;
        };
      };
    };
  };
};

export type GetProfileBalancesResponse =
  GetProfileBalancesResponses[keyof GetProfileBalancesResponses];

export type GetProfileCoinsData = {
  body?: never;
  path?: never;
  query: {
    identifier: string;
    count?: number;
    after?: string;
    chainIds?: Array<number>;
    platformReferrerAddress?: Array<string>;
  };
  url: "/profileCoins";
};

export type GetProfileCoinsErrors = {
  /**
   * Bad request
   */
  400: unknown;
  /**
   * Internal server error
   */
  500: unknown;
};

export type GetProfileCoinsResponses = {
  /**
   * Successful operation
   */
  200: {
    profile?: {
      /**
       * The Globally Unique ID of this object
       */
      id: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      handle: string;
      avatar?: {
        previewImage: {
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          blurhash?: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          medium: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          small: string;
        };
      };
      createdCoins?: {
        /**
         * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
         */
        count: number;
        edges: Array<{
          node: {
            /**
             * The Globally Unique ID of this object
             */
            id: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            name: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            description: string;
            address: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            symbol: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            totalSupply: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            totalVolume: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            volume24h: string;
            /**
             * Date with time (isoformat)
             */
            createdAt?: string;
            creatorAddress?: string;
            poolCurrencyToken?: {
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              address?: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              name?: string;
              /**
               * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
               */
              decimals?: number;
            };
            tokenPrice?: {
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              priceInUsdc?: string;
              currencyAddress: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              priceInPoolToken: string;
            };
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            marketCap: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            marketCapDelta24h: string;
            /**
             * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
             */
            chainId: number;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            tokenUri?: string;
            platformReferrerAddress?: string;
            payoutRecipientAddress?: string;
            creatorProfile?: {
              /**
               * The Globally Unique ID of this object
               */
              id: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              handle: string;
              avatar?: {
                previewImage: {
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  blurhash?: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  medium: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  small: string;
                };
              };
            };
            mediaContent?: {
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              mimeType?: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              originalUri: string;
              previewImage?: {
                /**
                 * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                 */
                small: string;
                /**
                 * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                 */
                medium: string;
                /**
                 * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                 */
                blurhash?: string;
              };
            };
            /**
             * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
             */
            uniqueHolders: number;
            uniswapV4PoolKey: {
              token0Address: string;
              token1Address: string;
              /**
               * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
               */
              fee: number;
              /**
               * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
               */
              tickSpacing: number;
              hookAddress: string;
            };
            uniswapV3PoolAddress: string;
            zoraComments: {
              pageInfo: {
                /**
                 * When paginating forwards, the cursor to continue.
                 */
                endCursor?: string;
                /**
                 * When paginating forwards, are there more items?
                 */
                hasNextPage: boolean;
              };
              /**
               * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
               */
              count: number;
              edges: Array<{
                node: {
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  commentId: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  nonce: string;
                  userAddress: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  txHash: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  comment: string;
                  /**
                   * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
                   */
                  timestamp: number;
                  userProfile?: {
                    /**
                     * The Globally Unique ID of this object
                     */
                    id: string;
                    /**
                     * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                     */
                    handle: string;
                    avatar?: {
                      previewImage: {
                        /**
                         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                         */
                        blurhash?: string;
                        /**
                         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                         */
                        small: string;
                        /**
                         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                         */
                        medium: string;
                      };
                    };
                  };
                };
              }>;
            };
          };
        }>;
        pageInfo: {
          /**
           * When paginating forwards, are there more items?
           */
          hasNextPage: boolean;
          /**
           * When paginating forwards, the cursor to continue.
           */
          endCursor?: string;
        };
      };
    };
  };
};

export type GetProfileCoinsResponse =
  GetProfileCoinsResponses[keyof GetProfileCoinsResponses];

export type PostQuoteData = {
  body?: {
    signatures?: Array<{
      permit: {
        details: {
          token: string;
          amount: string;
          expiration: number;
          nonce: number;
        };
        spender: string;
        sigDeadline: string;
      };
      signature: string;
    }>;
    permitActiveSeconds?: number;
    chainId?: number;
    tokenOut?: {
      type: "eth" | "erc20";
      address?: string;
    };
    tokenIn?: {
      type: "eth" | "erc20";
      address?: string;
    };
    amountIn?: string;
    slippage?: number;
    recipient?: string;
    sender?: string;
  };
  path?: never;
  query?: never;
  url: "/quote";
};

export type PostQuoteErrors = {
  /**
   * Error
   */
  500: {
    error?: string;
  };
};

export type PostQuoteError = PostQuoteErrors[keyof PostQuoteErrors];

export type PostQuoteResponses = {
  /**
   * Success
   */
  200: {
    success: boolean;
    call: {
      data: string;
      value: string;
      target: string;
    };
    /**
     * The approval information for the token
     */
    permits?: Array<{
      signature: string;
      permit: {
        sigDeadline: string;
        spender: string;
        details: {
          token: string;
          amount: string;
          expiration: number;
          nonce: number;
        };
      };
    }>;
    trade?: {
      commands: Array<string>;
      value: string;
      inputs: Array<string>;
    };
    quote: {
      amountOut: string;
      slippage: number;
      tokenIn?: {
        type?: string;
        address?: string;
      };
    };
  };
};

export type PostQuoteResponse = PostQuoteResponses[keyof PostQuoteResponses];

export type ClientOptions = {
  baseUrl:
    | "https://api-sdk.zora.engineering/"
    | "https://api-sdk-staging.zora.engineering/"
    | "http://localhost:8787/"
    | (string & {});
};
